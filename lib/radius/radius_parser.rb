#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'


require 'strscan'
require 'pp'

module Radius
  class RadiusParser < Racc::Parser

module_eval(<<'...end radius_parser.ry/module_eval...', 'radius_parser.ry', 104)

def parse(str)
    scanner = StringScanner.new(str)
    @q = []
    line = 1
    while !scanner.eos?
        scanner.scan(/\n/) ?                        line += 1 :
        scanner.scan(/\s/) ?                        nil :
        scanner.scan(/\<=/) ?                       @q << ['<=', {value: '<=', line: line}] :
        scanner.scan(/\>=/) ?                       @q << ['>=', {value: '>=', line: line}] :
        scanner.scan(/\</) ?                        @q << ['<', {value: '<', line: line}] :
        scanner.scan(/\>/) ?                        @q << ['>', {value: '>', line: line}] :
        scanner.scan(/\==/) ?                       @q << ['==', {value: '==', line: line}] :
        scanner.scan(/\!=/) ?                       @q << ['!=', {value: '!=', line: line}] :
        scanner.scan(/\<\>/) ?                      @q << ['!=', {value: '==', line: line}] :
        scanner.scan(/\".*?\"/) ?                   @q << [:STRING, {value: scanner.matched[1..-2], line: line}] :
        scanner.scan(/\'.*?\'/) ?                   @q << [:STRING, {value: scanner.matched[1..-2], line: line}] :
        scanner.scan(/[a-zA-Z_][a-zA-Z0-9_]*/) ?
        (case scanner.matched.to_s
            when "phase"
                                                    @q << [:PHASE, {value: 'phase', line: line}]
            when "true"
                                                    @q << [:BOOLEAN, {value: 'true', line: line}]
            when "false"
                                                    @q << [:BOOLEAN, {value: 'false', line: line}]
            when "do"
                                                    @q << [:DO, {value: 'do', line: line}]
            when "goto"
                                                    @q << [:GOTO, {value: 'goto', line: line}]
            when "if"
                                                    @q << [:IF, {value: 'if', line: line}]
            when "else"
                                                    @q << [:ELSE, {value: 'else', line: line}]
            when "for"
                                                    @q << [:FOR, {value: 'for', line: line}]
            else
                                                    @q << [:IDENTIFIER, {value: scanner.matched.to_s, line: line}]
        end) :
        scanner.scan(/([0-9]*\.[0-9]+)/) ?          @q << [:NUMBER, {value:scanner.matched.to_f, line: line}] :
        scanner.scan(/(0|[1-9][0-9]*)/) ?           @q << [:NUMBER, {value: scanner.matched.to_i, line: line}] :
        scanner.scan(/./) ?                         @q << [scanner.matched, {value: scanner.matched, line: line}] :
        raise("読み込みエラー: プログラムが読み込めません. (#{line}行目)")
    end
    puts "TOKEN: #{@q}"
    tree = do_parse
    puts "TREE:"
    p tree
    puts
    return tree
end

def next_token
    @q.shift
end

def on_error (error_token_id, error_value, value_stack)
    raise "文法エラー: 書き方に誤りがあります. '#{error_value[:value]}' (#{error_value[:line]}行目)"
end

...end radius_parser.ry/module_eval...
##### State transition tables begin ###

racc_action_table = [
    35,    36,    37,    33,    34,    38,    39,    40,    41,    42,
    43,    35,    36,    37,    33,    34,    38,    39,    40,    41,
    42,    43,    31,    77,    86,    72,    30,    73,    76,    74,
    21,    32,    27,    28,    29,     8,    78,    10,    75,    89,
    35,    36,    37,    33,    34,    38,    39,    40,    41,    42,
    43,    35,    36,    37,    33,    34,    38,    39,    40,    41,
    42,    43,    71,    35,    36,    37,    33,    34,     3,    88,
    35,    36,    37,    33,    34,    38,    39,    40,    41,    42,
    43,    31,    35,    36,    37,    30,     5,     8,    79,    21,
     6,    27,    28,    29,     8,    31,    35,    36,    37,    30,
    45,     8,    46,    21,    80,    27,    28,    29,     8,    31,
     8,     8,    44,    30,   nil,   nil,   nil,    21,   nil,    27,
    28,    29,     8,    31,   nil,   nil,   nil,    30,    52,   nil,
   nil,    21,   nil,    27,    28,    29,     8,    31,    55,   nil,
   nil,    30,   nil,   nil,   nil,    21,   nil,    27,    28,    29,
     8,    31,   nil,   nil,   nil,    30,   nil,   nil,   nil,    21,
   nil,    27,    28,    29,     8,    31,   nil,   nil,   nil,    30,
   nil,   nil,   nil,    21,   nil,    27,    28,    29,     8,    31,
   nil,   nil,   nil,    30,   nil,   nil,   nil,    21,   nil,    27,
    28,    29,     8,    31,   nil,   nil,   nil,    30,   nil,   nil,
   nil,    21,   nil,    27,    28,    29,     8,    31,   nil,   nil,
   nil,    30,   nil,   nil,   nil,    21,   nil,    27,    28,    29,
     8,    31,   nil,   nil,   nil,    30,   nil,   nil,   nil,    21,
   nil,    27,    28,    29,     8,    31,   nil,   nil,   nil,    30,
   nil,   nil,   nil,    21,   nil,    27,    28,    29,     8,    31,
   nil,   nil,   nil,    30,   nil,   nil,   nil,    21,   nil,    27,
    28,    29,     8,    31,   nil,   nil,   nil,    30,   nil,   nil,
   nil,    21,   nil,    27,    28,    29,     8,    31,   nil,   nil,
   nil,    30,   nil,   nil,   nil,    21,   nil,    27,    28,    29,
     8,    31,   nil,   nil,   nil,    30,   nil,   nil,   nil,    21,
   nil,    27,    28,    29,     8,    31,   nil,   nil,   nil,    30,
   nil,   nil,   nil,    21,   nil,    27,    28,    29,     8,    31,
   nil,   nil,   nil,    30,   nil,   nil,   nil,    21,   nil,    27,
    28,    29,     8,    31,   nil,   nil,   nil,    30,   nil,   nil,
   nil,    21,   nil,    27,    28,    29,     8,    31,   nil,   nil,
   nil,    30,   nil,   nil,   nil,    21,   nil,    27,    28,    29,
     8,    31,    12,   nil,   nil,    30,   nil,   nil,    19,    21,
   nil,    27,    28,    29,     8,    31,   nil,   nil,   nil,    30,
   nil,   nil,   nil,    21,   nil,    27,    28,    29,     8,    31,
   nil,   nil,   nil,    30,   nil,   nil,   nil,    21,   nil,    27,
    28,    29,     8,    35,    36,    37,    33,    34,    38,    39,
    40,    41,    42,    43,    35,    36,    37,    33,    34,    38,
    39,    40,    41,    42,    43,    35,    36,    37,    33,    34,
    38,    39,    40,    41,    42,    43,    35,    36,    37,    33,
    34,    38,    39,    40,    41,    42,    43,    35,    36,    37,
    33,    34,    38,    39,    40,    41,    42,    43,    35,    36,
    37,    33,    34,    38,    39,    40,    41,    42,    43,    35,
    36,    37,    33,    34,    38,    39,    40,    41,    42,    43,
    35,    36,    37,    33,    34,    38,    39,    40,    41,    42,
    43,    35,    36,    37,    33,    34,    35,    36,    37,    33,
    34,    35,    36,    37,    33,    34,    35,    36,    37,    33,
    34,    35,    36,    37,    33,    34 ]

racc_action_check = [
    54,    54,    54,    54,    54,    54,    54,    54,    54,    54,
    54,    85,    85,    85,    85,    85,    85,    85,    85,    85,
    85,    85,    78,    56,    79,    49,    78,    49,    54,    53,
    78,    13,    78,    78,    78,    78,    56,     7,    53,    85,
    48,    48,    48,    48,    48,    48,    48,    48,    48,    48,
    48,    81,    81,    81,    81,    81,    81,    81,    81,    81,
    81,    81,    48,    65,    65,    65,    65,    65,     1,    81,
    69,    69,    69,    69,    69,    69,    69,    69,    69,    69,
    69,    76,    57,    57,    57,    76,     2,     5,    69,    76,
     3,    76,    76,    76,    76,    75,    58,    58,    58,    75,
    18,    46,    18,    75,    70,    75,    75,    75,    75,    21,
    73,    19,    17,    21,   nil,   nil,   nil,    21,   nil,    21,
    21,    21,    21,    30,   nil,   nil,   nil,    30,    30,   nil,
   nil,    30,   nil,    30,    30,    30,    30,    31,    31,   nil,
   nil,    31,   nil,   nil,   nil,    31,   nil,    31,    31,    31,
    31,    33,   nil,   nil,   nil,    33,   nil,   nil,   nil,    33,
   nil,    33,    33,    33,    33,    86,   nil,   nil,   nil,    86,
   nil,   nil,   nil,    86,   nil,    86,    86,    86,    86,    35,
   nil,   nil,   nil,    35,   nil,   nil,   nil,    35,   nil,    35,
    35,    35,    35,    36,   nil,   nil,   nil,    36,   nil,   nil,
   nil,    36,   nil,    36,    36,    36,    36,    37,   nil,   nil,
   nil,    37,   nil,   nil,   nil,    37,   nil,    37,    37,    37,
    37,    38,   nil,   nil,   nil,    38,   nil,   nil,   nil,    38,
   nil,    38,    38,    38,    38,    39,   nil,   nil,   nil,    39,
   nil,   nil,   nil,    39,   nil,    39,    39,    39,    39,    40,
   nil,   nil,   nil,    40,   nil,   nil,   nil,    40,   nil,    40,
    40,    40,    40,    41,   nil,   nil,   nil,    41,   nil,   nil,
   nil,    41,   nil,    41,    41,    41,    41,    42,   nil,   nil,
   nil,    42,   nil,   nil,   nil,    42,   nil,    42,    42,    42,
    42,    43,   nil,   nil,   nil,    43,   nil,   nil,   nil,    43,
   nil,    43,    43,    43,    43,    44,   nil,   nil,   nil,    44,
   nil,   nil,   nil,    44,   nil,    44,    44,    44,    44,    45,
   nil,   nil,   nil,    45,   nil,   nil,   nil,    45,   nil,    45,
    45,    45,    45,    72,   nil,   nil,   nil,    72,   nil,   nil,
   nil,    72,   nil,    72,    72,    72,    72,    34,   nil,   nil,
   nil,    34,   nil,   nil,   nil,    34,   nil,    34,    34,    34,
    34,    11,    11,   nil,   nil,    11,   nil,   nil,    11,    11,
   nil,    11,    11,    11,    11,    80,   nil,   nil,   nil,    80,
   nil,   nil,   nil,    80,   nil,    80,    80,    80,    80,    89,
   nil,   nil,   nil,    89,   nil,   nil,   nil,    89,   nil,    89,
    89,    89,    89,    91,    91,    91,    91,    91,    91,    91,
    91,    91,    91,    91,    14,    14,    14,    14,    14,    14,
    14,    14,    14,    14,    14,    51,    51,    51,    51,    51,
    51,    51,    51,    51,    51,    51,    68,    68,    68,    68,
    68,    68,    68,    68,    68,    68,    68,    83,    83,    83,
    83,    83,    83,    83,    83,    83,    83,    83,    84,    84,
    84,    84,    84,    84,    84,    84,    84,    84,    84,    87,
    87,    87,    87,    87,    87,    87,    87,    87,    87,    87,
    90,    90,    90,    90,    90,    90,    90,    90,    90,    90,
    90,    66,    66,    66,    66,    66,    67,    67,    67,    67,
    67,    64,    64,    64,    64,    64,    62,    62,    62,    62,
    62,    63,    63,    63,    63,    63 ]

racc_action_pointer = [
   nil,    68,    72,    90,   nil,    59,   nil,    22,   nil,   nil,
   nil,   346,   nil,    14,   412,   nil,   nil,    94,    81,    83,
   nil,    94,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   108,   122,   nil,   136,   332,   164,   178,   192,   206,   220,
   234,   248,   262,   276,   290,   304,    73,   nil,    38,     6,
   nil,   423,   nil,     9,    -2,   nil,     7,    80,    94,   nil,
   nil,   nil,   504,   509,   499,    61,   489,   494,   434,    68,
    86,   nil,   318,    82,   nil,    80,    66,   nil,     7,     6,
   360,    49,   nil,   445,   456,     9,   150,   467,   nil,   374,
   478,   401 ]

racc_action_default = [
    -2,   -50,    -1,   -50,    -3,   -50,    92,   -50,   -41,    -4,
    -6,   -50,    -5,    -7,    -9,   -10,   -11,   -33,   -32,   -50,
   -16,   -50,   -29,   -30,   -31,   -34,   -35,   -38,   -39,   -40,
   -50,   -50,    -8,   -50,   -50,   -50,   -50,   -50,   -50,   -50,
   -50,   -50,   -50,   -50,   -50,   -50,   -50,   -15,   -50,   -32,
   -33,   -44,   -42,   -50,   -50,   -46,   -50,   -17,   -18,   -19,
   -20,   -21,   -22,   -23,   -24,   -25,   -26,   -27,   -12,   -50,
   -37,   -28,   -50,   -50,   -43,   -50,   -50,   -47,   -50,   -36,
   -50,   -50,   -37,   -45,   -48,   -50,   -50,   -14,   -36,   -50,
   -13,   -49 ]

racc_goto_table = [
    14,     4,     7,     9,    11,    13,    15,    16,    17,    18,
    48,    53,     1,    56,     2,   nil,    47,   nil,   nil,    51,
    54,   nil,    57,    58,    59,    60,    61,    62,    63,    64,
    65,    66,    67,    68,    69,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,    70,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    81,   nil,   nil,    83,    84,   nil,    85,   nil,    87,
    82,   nil,   nil,   nil,   nil,    90,   nil,   nil,    91 ]

racc_goto_check = [
     8,     3,     4,     5,     6,     7,     9,    10,     4,    11,
     8,    18,     1,    19,     2,   nil,     4,   nil,   nil,     8,
     8,   nil,     8,     8,     8,     8,     8,     8,     8,     8,
     8,     8,     8,     8,     8,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     4,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,     8,   nil,   nil,     8,     8,   nil,     8,   nil,     8,
     4,   nil,   nil,   nil,   nil,     8,   nil,   nil,     8 ]

racc_goto_pointer = [
   nil,    12,    14,    -1,    -3,    -4,    -6,    -6,   -11,    -5,
    -4,    -2,   nil,   nil,   nil,   nil,   nil,   nil,   -19,   -18 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    50,   nil,   nil,   nil,   nil,   nil,
   nil,    49,    20,    22,    23,    24,    25,    26,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  1, 32, :_reduce_none,
  0, 33, :_reduce_2,
  2, 33, :_reduce_3,
  3, 34, :_reduce_4,
  3, 36, :_reduce_5,
  0, 37, :_reduce_6,
  2, 37, :_reduce_7,
  3, 37, :_reduce_8,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  1, 38, :_reduce_none,
  3, 40, :_reduce_12,
  6, 40, :_reduce_13,
  5, 40, :_reduce_14,
  2, 41, :_reduce_15,
  1, 39, :_reduce_none,
  3, 39, :_reduce_17,
  3, 39, :_reduce_18,
  3, 39, :_reduce_19,
  3, 39, :_reduce_20,
  3, 39, :_reduce_21,
  3, 39, :_reduce_22,
  3, 39, :_reduce_23,
  3, 39, :_reduce_24,
  3, 39, :_reduce_25,
  3, 39, :_reduce_26,
  3, 39, :_reduce_27,
  3, 39, :_reduce_28,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 43, :_reduce_none,
  1, 42, :_reduce_33,
  1, 42, :_reduce_none,
  1, 42, :_reduce_none,
  4, 42, :_reduce_36,
  3, 42, :_reduce_37,
  1, 44, :_reduce_38,
  1, 45, :_reduce_39,
  1, 46, :_reduce_40,
  1, 35, :_reduce_41,
  2, 47, :_reduce_42,
  3, 47, :_reduce_43,
  1, 49, :_reduce_44,
  3, 49, :_reduce_45,
  2, 48, :_reduce_46,
  3, 48, :_reduce_47,
  3, 50, :_reduce_48,
  5, 50, :_reduce_49 ]

racc_reduce_n = 50

racc_shift_n = 92

racc_token_table = {
  false => 0,
  :error => 1,
  "*" => 2,
  "/" => 3,
  "%" => 4,
  "+" => 5,
  "-" => 6,
  "<" => 7,
  ">" => 8,
  "<=" => 9,
  ">=" => 10,
  "==" => 11,
  "!=" => 12,
  "<>" => 13,
  :PHASE => 14,
  "{" => 15,
  "}" => 16,
  ";" => 17,
  "=" => 18,
  "[" => 19,
  "]" => 20,
  "." => 21,
  :GOTO => 22,
  "(" => 23,
  ")" => 24,
  :NUMBER => 25,
  :STRING => 26,
  :BOOLEAN => 27,
  :IDENTIFIER => 28,
  "," => 29,
  ":" => 30 }

racc_nt_base = 31

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"+\"",
  "\"-\"",
  "\"<\"",
  "\">\"",
  "\"<=\"",
  "\">=\"",
  "\"==\"",
  "\"!=\"",
  "\"<>\"",
  "PHASE",
  "\"{\"",
  "\"}\"",
  "\";\"",
  "\"=\"",
  "\"[\"",
  "\"]\"",
  "\".\"",
  "GOTO",
  "\"(\"",
  "\")\"",
  "NUMBER",
  "STRING",
  "BOOLEAN",
  "IDENTIFIER",
  "\",\"",
  "\":\"",
  "$start",
  "program",
  "phases",
  "phase",
  "identifier",
  "block",
  "statements",
  "statement",
  "expr",
  "asg_statement",
  "goto_statement",
  "variable",
  "primary",
  "number",
  "string",
  "boolean",
  "new_array",
  "new_hash",
  "args",
  "params" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

# reduce 1 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 11)
  def _reduce_2(val, _values, result)
    result = [:phases, nil, nil, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 12)
  def _reduce_3(val, _values, result)
    result[3] << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 15)
  def _reduce_4(val, _values, result)
    result = [:phase, nil, nil, [val[1], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 18)
  def _reduce_5(val, _values, result)
    result = [:block, nil, nil, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 21)
  def _reduce_6(val, _values, result)
    result = []
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 22)
  def _reduce_7(val, _values, result)
    result << val[1]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 23)
  def _reduce_8(val, _values, result)
    result << val[1]
    result
  end
.,.,

# reduce 9 omitted

# reduce 10 omitted

# reduce 11 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 31)
  def _reduce_12(val, _values, result)
    result = [:asg_var, val[1][:line], val[1][:value], [val[2], val[0]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 32)
  def _reduce_13(val, _values, result)
    result = [:asg_index, val[4][:line], val[4][:value], [val[5], val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 33)
  def _reduce_14(val, _values, result)
    result = [:asg_index, val[3][:line], val[3][:value], [val[4], val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 36)
  def _reduce_15(val, _values, result)
    result = [:new_goto, val[0][:line], val[0][:value], [val[1]]]
    result
  end
.,.,

# reduce 16 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 40)
  def _reduce_17(val, _values, result)
    result = [:add, val[1][:line], val[1][:value], [val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 41)
  def _reduce_18(val, _values, result)
    result = [:dif, val[1][:line], val[1][:value], [val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 42)
  def _reduce_19(val, _values, result)
    result = [:mul, val[1][:line], val[1][:value], [val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 43)
  def _reduce_20(val, _values, result)
    result = [:div, val[1][:line], val[1][:value], [val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 44)
  def _reduce_21(val, _values, result)
    result = [:mod, val[1][:line], val[1][:value], [val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 46)
  def _reduce_22(val, _values, result)
    result = [:lt, val[1][:line], val[1][:value], [val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 47)
  def _reduce_23(val, _values, result)
    result = [:gt, val[1][:line], val[1][:value], [val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 48)
  def _reduce_24(val, _values, result)
    result = [:lte, val[1][:line], val[1][:value], [val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 49)
  def _reduce_25(val, _values, result)
    result = [:gte, val[1][:line], val[1][:value], [val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 50)
  def _reduce_26(val, _values, result)
    result = [:eq, val[1][:line], val[1][:value], [val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 51)
  def _reduce_27(val, _values, result)
    result = [:neq, val[1][:line], val[1][:value], [val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 53)
  def _reduce_28(val, _values, result)
    result = val[1]
    result
  end
.,.,

# reduce 29 omitted

# reduce 30 omitted

# reduce 31 omitted

# reduce 32 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 62)
  def _reduce_33(val, _values, result)
    result = [:ref_var, val[0][1], nil, [val[0]]]
    result
  end
.,.,

# reduce 34 omitted

# reduce 35 omitted

module_eval(<<'.,.,', 'radius_parser.ry', 65)
  def _reduce_36(val, _values, result)
    result = [:ref_index, val[2][1], nil, [val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 66)
  def _reduce_37(val, _values, result)
    result = [:ref_index, val[2][1], nil, [val[0], val[2]]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 69)
  def _reduce_38(val, _values, result)
    result = [:number, val[0][:line], val[0][:value], []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 72)
  def _reduce_39(val, _values, result)
    result = [:string, val[0][:line], val[0][:value], []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 75)
  def _reduce_40(val, _values, result)
    result = [:boolean, val[0][:line], val[0][:value], []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 78)
  def _reduce_41(val, _values, result)
    result = [:identifier, val[0][:line], val[0][:value], []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 81)
  def _reduce_42(val, _values, result)
    result = [:new_array, val[0][:line], nil, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 82)
  def _reduce_43(val, _values, result)
    result = [:new_array, val[0][:line], nil, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 85)
  def _reduce_44(val, _values, result)
    result = [val[0]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 86)
  def _reduce_45(val, _values, result)
    result << val[2]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 89)
  def _reduce_46(val, _values, result)
    result = [:new_hash, val[0][:line], nil, []]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 90)
  def _reduce_47(val, _values, result)
    result = [:new_hash, val[0][:line], nil, val[1]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 93)
  def _reduce_48(val, _values, result)
    result = [val[0], val[2]]
    result
  end
.,.,

module_eval(<<'.,.,', 'radius_parser.ry', 94)
  def _reduce_49(val, _values, result)
    result << val[2] << val[4]
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

  end   # class RadiusParser
  end   # module Radius


if __FILE__ == $0
    parser = RadiusParser.new
    prg = ""
    File.open("program.rlb", "r") do |f|
        prg = f.read + "\n"
    end
    begin
        parser.parse(prg)
    rescue => e
        puts e
    end
end
